{"ast":null,"code":"import { CreateTaskComponent } from './create-task/create-task.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nimport * as i2 from \"../../@core/services/tasks.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../@theme/directives/focus.directive\";\n\nfunction TasksComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2, \"Please select a list from the sidebar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TasksComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"List is empty\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction TasksComponent_ng_template_5_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function TasksComponent_ng_template_5_div_1_div_3_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(3);\n      return ctx_r9.taskName = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"i\", 18);\n    i0.ɵɵlistener(\"click\", function TasksComponent_ng_template_5_div_1_div_3_Template_i_click_2_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const i_r7 = i0.ɵɵnextContext().index;\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.saveTask(ctx_r11.items[ctx_r11.currentSelectedId - 1], ctx_r11.taskName, i_r7);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r8.taskName);\n  }\n}\n\nfunction TasksComponent_ng_template_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"p\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TasksComponent_ng_template_5_div_1_div_3_Template, 3, 1, \"div\", 12);\n    i0.ɵɵelementStart(4, \"div\", 13);\n    i0.ɵɵelementStart(5, \"i\", 14);\n    i0.ɵɵlistener(\"click\", function TasksComponent_ng_template_5_div_1_Template_i_click_5_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const i_r7 = restoredCtx.index;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.editTask(ctx_r13.items[ctx_r13.currentSelectedId - 1], ctx_r13.taskName, i_r7);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"i\", 15);\n    i0.ɵɵlistener(\"click\", function TasksComponent_ng_template_5_div_1_Template_i_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const i_r7 = restoredCtx.index;\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.removeTask(ctx_r15.items[ctx_r15.currentSelectedId - 1], i_r7);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.editTaskBtnClicked && ctx_r5.selectedTask === i_r7);\n  }\n}\n\nfunction TasksComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, TasksComponent_ng_template_5_div_1_Template, 7, 2, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.items[ctx_r3.currentSelectedId - 1] == null ? null : ctx_r3.items[ctx_r3.currentSelectedId - 1].tasks);\n  }\n}\n\nfunction TasksComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelementStart(1, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function TasksComponent_div_7_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.createTask();\n    });\n    i0.ɵɵelement(2, \"i\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let TasksComponent = /*#__PURE__*/(() => {\n  class TasksComponent {\n    constructor(modalService, tasksService) {\n      this.modalService = modalService;\n      this.tasksService = tasksService;\n      this.items = [];\n      this.editTaskBtnClicked = false;\n    }\n\n    ngOnInit() {\n      this.items = this.tasksService.getItems();\n      this.tasksService.selectItemEvent.subscribe(item => {\n        this.currentSelectedId = item.id;\n      });\n    }\n\n    createTask() {\n      const modalRef = this.modalService.show(CreateTaskComponent);\n      modalRef.content.taskNameEvent.subscribe(res => {\n        var _a, _b;\n\n        (_b = (_a = this.items[this.currentSelectedId - 1]) === null || _a === void 0 ? void 0 : _a.tasks) === null || _b === void 0 ? void 0 : _b.push(res);\n      });\n    }\n\n    editTask(item, name, index) {\n      this.taskName = item.tasks[index];\n      this.editTaskBtnClicked = true;\n      this.selectedTask = index;\n    }\n\n    removeTask(item, index) {\n      var _a, _b;\n\n      (_b = (_a = this.items[this.currentSelectedId - 1]) === null || _a === void 0 ? void 0 : _a.tasks) === null || _b === void 0 ? void 0 : _b.splice(index, 1);\n    }\n\n    saveTask(item, taskName, index) {\n      this.editTaskBtnClicked = false;\n      this.tasksService.updateItem(item, taskName, index);\n    }\n\n  }\n\n  TasksComponent.ɵfac = function TasksComponent_Factory(t) {\n    return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.BsModalService), i0.ɵɵdirectiveInject(i2.TasksService));\n  };\n\n  TasksComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TasksComponent,\n    selectors: [[\"app-tasks\"]],\n    decls: 8,\n    vars: 4,\n    consts: [[1, \"main-block--tasks--content\"], [1, \"main-block--header\"], [\"class\", \"main-block--empty main-block--empty--default\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"tasksData\", \"\"], [\"class\", \"tasks--block--add\", 4, \"ngIf\"], [1, \"main-block--empty\", \"main-block--empty--default\"], [1, \"main-block--empty\"], [1, \"tasks--block\"], [\"class\", \"tasks--block--item\", 4, \"ngFor\", \"ngForOf\"], [1, \"tasks--block--item\"], [1, \"me-4\", \"mb-0\"], [\"class\", \"tasks--block--item--edit\", 4, \"ngIf\"], [1, \"d-flex\", \"align-items-center\"], [1, \"fas\", \"fa-edit\", \"me-2\", \"tasks--block--item--icon\", 3, \"click\"], [1, \"fa-solid\", \"fa-trash-can\", \"tasks--block--item--icon\", 3, \"click\"], [1, \"tasks--block--item--edit\"], [\"type\", \"text\", \"focus\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"fas\", \"fa-check\", 3, \"click\"], [1, \"tasks--block--add\"], [1, \"btn\", \"btn-success\", \"rounded-circle\", 3, \"click\"], [1, \"fa-solid\", \"fa-plus\", \"m-0\"]],\n    template: function TasksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h4\", 1);\n        i0.ɵɵtext(2, \"Tasks\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, TasksComponent_div_3_Template, 3, 0, \"div\", 2);\n        i0.ɵɵtemplate(4, TasksComponent_ng_container_4_Template, 4, 0, \"ng-container\", 3);\n        i0.ɵɵtemplate(5, TasksComponent_ng_template_5_Template, 2, 1, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, TasksComponent_div_7_Template, 3, 0, \"div\", 5);\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(6);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.currentSelectedId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentSelectedId && !(ctx.items[ctx.currentSelectedId - 1] == null ? null : ctx.items[ctx.currentSelectedId - 1].tasks == null ? null : ctx.items[ctx.currentSelectedId - 1].tasks.length))(\"ngIfElse\", _r2);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.items[ctx.currentSelectedId - 1] == null ? null : ctx.items[ctx.currentSelectedId - 1].tasks);\n      }\n    },\n    directives: [i3.NgIf, i3.NgForOf, i4.DefaultValueAccessor, i5.FocusDirective, i4.NgControlStatus, i4.NgModel],\n    encapsulation: 2\n  });\n  return TasksComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}